#!/bin/bash
#
# Selenium
#
# chkconfig: 345 90 25
# description: Selenium service

# Source function library.
. /etc/init.d/functions

java_bin=/usr/bin/java
xvfb_bin=/usr/bin/xvfb-run

selenium_dir={{ selenium_install_dir }}/selenium
selenium_jar_file="$selenium_dir/selenium-server-standalone-{{ selenium_version }}.jar"
lockfile="/var/lock/subsys/selenium"
pidfile="$selenium_dir/selenium.pid"
logfile="$selenium_dir/selenium.log"
prog="start.sh"
max=30

RETVAL=0

start() {
  echo -n $"Starting $prog: "
  touch $pidfile
  touch $logfile

  echo "Starting selenium server" >> $logfile
  nohup $selenium_dir/start.sh 2>> $logfile 1>> $logfile &

  COUNTER=0;
  while ! tail -n1 $logfile | grep "Selenium Server is up and running" > /dev/null; do
    COUNTER=$((COUNTER+1))
    if [ "$COUNTER" -gt "$max" ] ; then
        echo_failure
        return 1
    fi
    sleep 10
  done

  pgrep -f $prog | sed -n 1p > $pidfile

  RETVAL=$?
  [ $RETVAL -eq 0 ] && echo_success || echo_failure
  echo
  [ $RETVAL -eq 0 ] && touch $lockfile

  return $RETVAL
}

stop() {
  echo -n $"Stopping $prog: "
  echo "Stopping selenium server" >> $logfile

  DAEMON_PID=$(cat $pidfile)
  DAEMON_CHILDREN=$(pstree -l -p $DAEMON_PID |grep "([[:digit:]]*)" -o |tr -d '()')
  killproc -p $DAEMON_PID $prog && kill $DAEMON_CHILDREN

  RETVAL=$?
  [ $RETVAL -eq 0 ] && echo_success || echo_failure
  echo
  [ $RETVAL -eq 0 ] && rm -f $lockfile $pidfile

  return $RETVAL
}

restart() {
  stop
  sleep 5
  start
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status -p ${pidfile} ${prog}
    RETVAL=$?
    ;;
  restart)
    restart
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart}"
    exit 1
esac
